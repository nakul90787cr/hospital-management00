import React from 'react';
import { motion } from 'framer-motion';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Skeleton } from "@/components/ui/skeleton";
import { User, Phone, Activity, Edit, Trash2, Eye } from "lucide-react";

export default function PatientList({ patients, isLoading, onEdit, onDelete, onViewDetails, canModify, selectedPatientId }) {
  const statusColors = {
    Active: "bg-green-100 text-green-800 border-green-200",
    Discharged: "bg-gray-100 text-gray-800 border-gray-200",
    "Under Treatment": "bg-blue-100 text-blue-800 border-blue-200"
  };

  return (
    <Card className="border-none shadow-lg">
      <CardHeader className="border-b bg-gradient-to-r from-blue-50 to-green-50">
        <CardTitle className="text-xl font-bold flex items-center gap-2">
          <User className="w-5 h-5" />
          Patient Records ({patients.length})
        </CardTitle>
      </CardHeader>
      <CardContent className="p-6">
        {isLoading ? (
          <div className="space-y-4">
            {[1, 2, 3, 4, 5].map((i) => (
              <div key={i} className="p-4 border rounded-lg">
                <Skeleton className="h-6 w-32 mb-2" />
                <Skeleton className="h-4 w-48 mb-2" />
                <Skeleton className="h-4 w-24" />
              </div>
            ))}
          </div>
        ) : patients.length === 0 ? (
          <div className="text-center py-12">
            <User className="w-16 h-16 text-gray-300 mx-auto mb-4" />
            <p className="text-gray-500 text-lg">No patients found</p>
            <p className="text-gray-400 text-sm mt-2">Add a new patient to get started</p>
          </div>
        ) : (
          <div className="space-y-4">
            {patients.map((patient) => (
              <motion.div
                key={patient.id}
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                className={`p-4 border-2 rounded-lg hover:shadow-md transition-all ${
                  selectedPatientId === patient.id ? 'border-blue-500 bg-blue-50' : 'border-gray-200 bg-white'
                }`}
              >
                <div className="flex items-start justify-between gap-4">
                  <div className="flex items-start gap-4 flex-1">
                    <div className="w-12 h-12 rounded-full bg-gradient-to-br from-blue-500 to-green-500 flex items-center justify-center flex-shrink-0">
                      <span className="text-white font-bold text-lg">
                        {patient.name?.charAt(0) || 'P'}
                      </span>
                    </div>
                    <div className="flex-1">
                      <div className="flex items-start justify-between gap-2 mb-2">
                        <h3 className="font-bold text-gray-900 text-lg">{patient.name}</h3>
                        <Badge className={`${statusColors[patient.status]} border`}>
                          {patient.status}
                        </Badge>
                      </div>
                      <div className="space-y-1 text-sm text-gray-600">
                        <p className="flex items-center gap-2">
                          <Activity className="w-4 h-4" />
                          <span className="font-medium">Disease:</span> {patient.disease}
                        </p>
                        <div className="flex items-center gap-4">
                          <span className="flex items-center gap-1">
                            <Phone className="w-4 h-4" />
                            {patient.contact}
                          </span>
                          <span>Age: {patient.age}</span>
                          <span>Gender: {patient.gender}</span>
                        </div>
                        {patient.managing_doctor && (
                          <p className="text-xs text-gray-500">
                            Managing Doctor: Dr. {patient.managing_doctor}
                          </p>
                        )}
                      </div>
                    </div>
                  </div>
                  <div className="flex gap-2">
                    <Button
                      variant="outline"
                      size="icon"
                      onClick={() => onViewDetails(patient)}
                      title="View Details"
                    >
                      <Eye className="w-4 h-4" />
                    </Button>
                    {canModify && (
                      <>
                        <Button
                          variant="outline"
                          size="icon"
                          onClick={() => onEdit(patient)}
                          title="Edit Patient"
                        >
                          <Edit className="w-4 h-4" />
                        </Button>
                        <Button
                          variant="outline"
                          size="icon"
                          onClick={() => onDelete(patient)}
                          className="hover:bg-red-50 hover:text-red-600 hover:border-red-200"
                          title="Delete Patient"
                        >
                          <Trash2 className="w-4 h-4" />
                        </Button>
                      </>
                    )}
                  </div>
                </div>
              </motion.div>
            ))}
          </div>
        )}
      </CardContent>
    </Card>
  );
}